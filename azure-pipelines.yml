# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- master

jobs:
- job: Windows
  pool:
    vmImage: windows-2019
  
  steps:
  - task: DownloadSecureFile@1
    inputs:
      secureFile: 'idasdk70-win.7z'

  - checkout: self
    submodules: true

  - powershell: |
      cd $(Agent.TempDirectory)

      Import-Module BitsTransfer
      Invoke-WebRequest -Uri https://jinmo123.bintray.com/ci/qt.7z -OutFile qt.7z
      Invoke-WebRequest -Uri https://github.com/ninja-build/ninja/releases/download/v1.9.0/ninja-win.zip -OutFile ninja-win.zip

      7z x qt.7z '-oqt563'
      7z x "$(Agent.TempDirectory)\\idasdk70-win.7z" '-o.'
      7z x ninja-win.zip '-o$(Build.SourcesDirectory)'

    displayName: Install dependencies
  
  - task: UsePythonVersion@0
    inputs:
      versionSpec: 2.7.14
      addToPath: true
      architecture: x64

  - script: |
      set PATH=$(Build.SourcesDirectory);%PATH%
      "C:\\Program Files (x86)\\Microsoft Visual Studio\\2019\\Enterprise\\VC\\Auxiliary\\Build\\vcvars64.bat"

      mkdir build64
      cd build64

      cmake .. "-DCMAKE_PREFIX_PATH=$(Agent.TempDirectory)\\qt563" -DIDA_BINARY_64=True -DIDA_EA_64=True "-DIDA_SDK=$(Agent.TempDirectory)\\idasdk70" -DIDA_VERSION=700 -G Ninja
      ninja

      copy palette\\*.dll $(Build.ArtifactStagingDirectory)

      cd ..
      mkdir build
      cd build

      cmake .. "-DCMAKE_PREFIX_PATH=$(Agent.TempDirectory)\\qt563" -DIDA_BINARY_64=True -DIDA_EA_64=True "-DIDA_SDK=$(Agent.TempDirectory)\\idasdk70" -DIDA_VERSION=700 -G Ninja
      ninja

      copy palette\\*.dll $(Build.ArtifactStagingDirectory)
    displayName: Build

  - task: PublishBuildArtifacts@1
    inputs:
      PathtoPublish: '$(Build.ArtifactStagingDirectory)'
      ArtifactName: 'mac-7.x-both'

- job: MacOSX
  pool:
    vmImage: macos-10.14
  
  steps:
  - task: DownloadSecureFile@1
    inputs:
      secureFile: 'idasdk70-mac.zip'
  
  - task: DownloadSecureFile@1
    inputs:
      secureFile: 'idalib-7.0-mac.zip'

  - task: DownloadSecureFile@1
    inputs:
      secureFile: 'qt5.6.0.txz'

  - checkout: self
    submodules: true

  - script: |
      brew install cmake ninja
      cd $(Build.SourcesDirectory)
      unzip $(Agent.TempDirectory)/idasdk70-mac.zip -d idasdk70
      unzip $(Agent.TempDirectory)/idalib-7.0-mac.zip -d idalib-7.0
      tar xvf $(Agent.TempDirectory)/qt5.6.0.txz || exit 100
      mkdir build64
      cd build64
      cmake $(Build.SourcesDirectory) -DCMAKE_PREFIX_PATH=$PWD/../qt560/clang_64 -DIDA_SDK=$PWD/../idasdk70 -DIDA_VERSION=700 -DIDA_BINARY_64=True -DIDA_EA_64=True -GNinja -DPYBIND11_PYTHON_VERSION=2.7 -DIDA_INSTALL_DIR=$PWD/../idalib-7.0/MacOS
      ninja
      cp palette/ida_palette64.dylib $(Build.ArtifactStagingDirectory)
      mkdir ../build
      cd ../build
      cmake $(Build.SourcesDirectory) -DCMAKE_PREFIX_PATH=$PWD/../qt560/clang_64 -DIDA_SDK=$PWD/../idasdk70 -DIDA_VERSION=700 -DIDA_BINARY_64=True -DIDA_EA_64=False -GNinja -DPYBIND11_PYTHON_VERSION=2.7 -DIDA_INSTALL_DIR=$PWD/../idalib-7.0/MacOS
      ninja
      cp palette/ida_palette.dylib $(Build.ArtifactStagingDirectory)
    displayName: 'Build'

  - task: PublishBuildArtifacts@1
    inputs:
      PathtoPublish: '$(Build.ArtifactStagingDirectory)'
      ArtifactName: 'mac-7.x-both'
